//--------------------------------------------------------------------------------------------------
//= ChamferFill Module
//--------------------------------------------------------------------------------------------------
//	面取り(角を削った)矩形を描画する命令です。
//--------------------------------------------------------------------------------------------------
#module _ChamferFill_

	//----------------------------------------------------------------------------------------------
	//= 初期化命令
	//----------------------------------------------------------------------------------------------
	//	ChamferFillInit p1
	//
	//	p1 = 角を削る深さ(pixel)
	//----------------------------------------------------------------------------------------------
	//	ChamferFill命令で描画される8角形の角の深さを設定する命令です。
	//	このファイルをincludeした時に自動で実行され、4が設定されます。
	//----------------------------------------------------------------------------------------------
	#deffunc ChamferFillInit int _c
		Corner = limit(_c, 0, 128)
	return

	//----------------------------------------------------------------------------------------------
	//=	面取り矩形で塗りつぶす命令
	//----------------------------------------------------------------------------------------------
	//	ChamferFill p1, p2, p3, p4
	//
	//	p1 = 左上X座標
	//	p2 = 左上Y座標
	//	p3 = 横幅
	//	p4 = 縦幅
	//----------------------------------------------------------------------------------------------
	//	p3/p4を省略した場合には、現在の角を削る深さ(ChamferFillInit命令)で可能な
	//	最小のサイズ((角を削る深さ*2)+1)で描画されます。
	//	また、最小のサイズを下回る数値を入力しても同じ結果となります。
	//----------------------------------------------------------------------------------------------
	#deffunc ChamferFill int _x, int _y, int _w, int _h
		SizeW = _w : SizeH = _h
		if(SizeW<Corner*2+1){SizeW = Corner*2+1}
		if(SizeH<Corner*2+1){SizeH = Corner*2+1}
		//上
		repeat Corner
			tmp = Corner-cnt
			boxf _x+tmp, _y+cnt, _x+SizeW-1-tmp, _y+cnt
		loop
		//中
		boxf _x, _y+Corner, _x+SizeW-1, _y+SizeH-1-Corner
		//下
		repeat Corner
			tmp = Corner-cnt
			boxf _x+tmp, _y+SizeH-1-cnt, _x+SizeW-1-tmp, _y+SizeH-1-cnt
		loop
	return

#global
ChamferFillInit 4

//--------------------------------------------------------------------------------------------------
//= 以下サンプル
//--------------------------------------------------------------------------------------------------
#if 0
	CountAdd = 1
	*__main
		//処理
		if(Frame\3==0){
			Count += CountAdd
			if(Count==0)|(Count==19){
				CountAdd *= -1
			}
		}

		stick ky
		if(mousex>=480)&(mousex<=480+128)&(mousey>=300)&(mousey<=300+64){
			if(ky & 256){end}
			ButtonColor = 224, 224/2, 224/3
		} else {
			ButtonColor = 224/3, 224/2, 224
		}

		//描画
		redraw 0

		ChamferFillInit 4
		color:boxf
		x = 16:y = 16:w = 608:h = 16
		repeat Count
			color ,255-cnt*12
			ChamferFill x+cnt*cnt, y, w-cnt*32, h
			y += h+8
		loop

		ChamferFillInit 16
		color ButtonColor(0), ButtonColor(1), ButtonColor(2)
		ChamferFill 480, 300, 128, 64

		color 255,255,255
		font msgothic, 24, 1
		pos 518, 320
		mes "exit"
		
		Frame++
		await 16

		redraw 1
	goto *__main
#endif