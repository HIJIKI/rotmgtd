//--------------------------------------------------------------------------------------------------
//= calc.hsp
//--------------------------------------------------------------------------------------------------
//	キー入力の監視や計算処理
//--------------------------------------------------------------------------------------------------

	timer_start timer_cnt(), "計算"

	//----------------------------------------------------------------------------------------------
	//= キー入力監視(GetKeyInputモジュール)
	//----------------------------------------------------------------------------------------------
		CheckKeyInput

	//----------------------------------------------------------------------------------------------
	//= デバッグフラグのトグル
	//----------------------------------------------------------------------------------------------
		if( GetKeyInput(KB_D) == 1 ){ logmes "dede" : DEBUG_FLAG ^= 1 }

	//----------------------------------------------------------------------------------------------
	//= カーソルを当てているマスを取得
	//----------------------------------------------------------------------------------------------
		mx = MousePosX()
		my = MousePosY()
		if(mx >= 0)&(mx <= WINDOW_SIZE_W-1-MENU_SIZE_W)&(my >= 0)&(my <= WINDOW_SIZE_H-1){
			CursorPosX = MousePosX()/TILE_SIZE_WH
			CursorPosY = MousePosY()/TILE_SIZE_WH
		} else {
			//カーソルがマップ内に無い場合は-1
			CursorPosX = -1
			CursorPosY = -1
		}

	//----------------------------------------------------------------------------------------------
	//= マップエディット(上層チップ)
	//----------------------------------------------------------------------------------------------
		//カーソルがマップ内にあるか
		if(CursorPosX != -1)&(CursorPosY != -1) {
			x = CursorPosX : y = CursorPosY
			//下層マップに障害物がないか
			if(MapDataLower(x, y)== 0){
				//左クリック
				if(GetKeyInput(MO_LEFT) != 0){
					if(MapDataUpper(x, y) != 1){
						MapUndoSet x, y, MapDataUpper(x, y)
						MapDataUpper(x, y) = 1
						GoalDisCalc
						//設置した上層チップがルール違反であればUndo
						if(MapRuleCheck() == 1){
							MapUndo
						}
					}
				}
				//右クリック
				if(GetKeyInput(MO_RIGHT) != 0){
					x = CursorPosX : y = CursorPosY
					if(MapDataLower(x, y) == 0){
						if(MapDataUpper(x, y) != 0){
							MapDataUpper(x, y) = 0
							GoalDisCalc
						}
					}
				}
			}
		}

	//----------------------------------------------------------------------------------------------
	//= 敵の処理
	//----------------------------------------------------------------------------------------------
		#include "enemy.hsp"

	//----------------------------------------------------------------------------------------------
	//= ボタンの処理
	//----------------------------------------------------------------------------------------------
		mgButtonCalc

	timer_end timer_cnt()